#!/bin/bash

PLPackage=_PLPACKAGE_
PGHome=_PGHOME_
PGPort=_PGPORT_

PGServerController() {


        if [[ "$1" == "start" ]]
        then

                if [[ -d $PLPackage ]]
                then

			if [ -f "/etc/redhat-release" ] || [ -f "/etc/SuSe-release" ]; then

				serverStatus=`export PATH=$PLPackage/Perl-5.26/bin:$PATH; export LD_LIBRARY_PATH=$PLPackage/Perl-5.26/lib/CORE:$LD_LIBRARY_PATH; export PERL5LIB=$PLPackage/Perl-5.26/lib; export PATH=$PLPackage/Tcl-8.6/bin:$PATH; export LD_LIBRARY_PATH=$PLPackage/Tcl-8.6/lib:$LD_LIBRARY_PATH; $PGHome/bin/pg_ctl -D $PGHome/data -o " -p $PGPort" -l /tmp/logfile -w $1`

				return

			else
				serverStatus=`sudo su postgres -c 'export PATH='"$PLPackage"'/Perl-5.26/bin:$PATH; export LD_LIBRARY_PATH='"$PLPackage"'/Perl-5.26/lib/CORE:$LD_LIBRARY_PATH; export PERL5LIB=/'"$PLPackage"'/Perl-5.26/lib; export PATH='"$PLPackage"'/Tcl-8.6/bin:$PATH;export LD_LIBRARY_PATH='"$PLPackage"'/Tcl-8.6/lib:$LD_LIBRARY_PATH; '"$PGHome"'/bin/pg_ctl -D '"$PGHome"'/data -o " -p '"$PGPort"'" -l /tmp/logfile -w '"$1"''`

				return

			fi

                else
                        echo "Warning: Starting server without PL Languages support ..."
                fi
	fi

	if [ -f "/etc/redhat-release" ] || [ -f "/etc/SuSe-release" ]; then

		serverStatus=`$PGHome/bin/pg_ctl -D $PGHome/data -o " -p $PGPort" -l /tmp/logfile -m fast -w $1`
	else
	        serverStatus=`sudo su postgres -c ''"$PGHome"'/bin/pg_ctl -D '"$PGHome"'/data -o " -p '"$PGPort"'" -l /tmp/logfile -m fast -w '"$1"''`

	fi

}


case "$1" in
start)

        PGServerController status

        if [[ $serverStatus == *"server is running"* ]]
        then
                echo "Server is already running ..."
		exit 0
        else
                rm -f /tmp/.s.PGSQL.* > /dev/null

                echo  "Starting PostgreSQL server ..."

                PGServerController start

                echo "Checking if server is properly started ..."

                PGServerController status

                if [[ $serverStatus == *"server is running"* ]]
                then
                        echo "Started successfully ..."
			exit 0
                else
                        echo "Unable to start the server"
			exit 1
                fi
        fi

;;


stop)

        echo "Stopping PostgreSQL server ..."

        PGServerController stop

        if [[ $serverStatus == *"stopped"* ]]
        then
                echo "Successfully stopped ..."
		exit 0
        else
                echo "Unable to stop the server ..."
		exit 1
        fi

;;


status)

        PGServerController status

        echo $serverStatus

	exit 0

;;


restart)
    $0 stop
    $0 start

;;


*)
    echo "Usage: postgresql {start|stop|status|restart}"
    exit 1
esac

exit 0
