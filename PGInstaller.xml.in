<project>
    <shortName>PostgreSQL</shortName>
    <fullName>PostgreSQL</fullName>
    <version>__PG_MAJOR_VERSION__</version>
    <installerFilename>${product_shortname}-__FULL_VERSION____EXTRA_VERSION_STRING__-__BUILD_NUMBER____DEV_TEST__-${platform_name}-installer.${platform_exec_suffix}</installerFilename>
    <debugLevel>4</debugLevel>
    <leftImage>${build_project_directory}/logos/2ndQLeftPanel.png</leftImage>
    <logoImage>${build_project_directory}/logos/2ndQLogo.jpg</logoImage>
    <splashImage>${build_project_directory}/logos/2ndQSplash.png</splashImage>
    <allowLanguageSelection>1</allowLanguageSelection>
    <enableDebugger>__DEBUG__</enableDebugger>
    <osxPlatforms>osx-intel osx-x86_64</osxPlatforms>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <initializationActionList>
        <setInstallerVariable name="slash" value="/" />
        <setInstallerVariable name="slash" value="\" >
            <ruleList>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </setInstallerVariable>
    </initializationActionList>
    <componentList>
        <component>
            <name>Installer_Scripts</name>
            <description>Installer_Scripts</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>Installs scripts required for setup</detailedDescription>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/${product_version}</destination>
                    <name>programfilesosx</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>Installer_scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
        </component>
        <component>
            <name>pg_96</name>
            <description>PostgreSQL ${product_version}</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>${msg(description.postgres)}</detailedDescription>
            <selected>0</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/OSX/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswin</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Windows/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programileslinux</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Linux/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
            <parameterList>

                <!-- This screen will appear after the installation is done and it will have information about Postgres Learning Center and a link to open PLC in the browser -->
                <parameterGroup>
                        <name>postInstallationPage</name>
                        <title>${msg(PLC.title)}</title>
                        <explanation>${msg(PLC.description)}</explanation>
                        <insertAfter>installation</insertAfter>
                        <parameterList>
                                <linkParameter>
                                        <name>openPLC</name>
                                        <description>Open Postgres Learning Center</description>
                                        <clickedActionList>
                                                <launchBrowser>
                                                        <url>https://www.2ndquadrant.com/en/postgres-learning-center/?utm_campaign=Postgres%20Learning%20Center&amp;utm_source=installer&amp;utm_medium=plcscreen</url>
                                                </launchBrowser>
                                        </clickedActionList>
                                </linkParameter>
                                <!-- Add more info here if we need -->
                        </parameterList>
                </parameterGroup>

                <directoryParameter>
                    <name>data_dir</name>
                    <title>${msg(data_dir.title)}</title>
                    <description>${msg(data_dir.description)}</description>
                    <explanation>${msg(data_dir.explanation)}</explanation>
                    <value>${installdir}/${product_version}/data</value>
                    <default>${installdir}/${product_version}/data</default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <mustBeWritable>1</mustBeWritable>
                    <mustExist>0</mustExist>
                    <width>30</width>
                    <preShowPageActionList>
                        <setInstallerVariable>
                            <name>data_dir</name>
                            <value>${env(PROGRAMDATA)}/${product_shortname}/${product_version}/data</value>
                            <ruleList>
                                <platformTest>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>
                        </setInstallerVariable>
                    </preShowPageActionList>
                    <validationActionList>
                        <throwError>
                            <text>${msg(data_dir.error)}</text>
                            <ruleList>
                                <fileTest>
                                    <condition>is_empty</condition>
                                    <negate>1</negate>
                                    <path>${data_dir}</path>
                                </fileTest>
                                <fileExists>
                                    <path>${data_dir}</path>
                                </fileExists>
                            </ruleList>
                        </throwError>
                    </validationActionList>
                </directoryParameter>
                <stringParameter>
                    <name>pg_port</name>
                    <title>${msg(summary.pg_port)}</title>
                    <description>${msg(pg_port.description)}</description>
                    <explanation>${msg(pg_port.explanation)}</explanation>
                    <value>${freePort}</value>
                    <default>${freePort}</default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <width>30</width>
                    <postShowPageActionList>
                        <setInstallerVariable>
                            <name>next_page</name>
                            <value>pg_password</value>

                            <!-- Make sure we only show pg_password screen if platform is not Windows -->
			    <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>

                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>back_page</name>
                            <value>data_dir</value>
                        </setInstallerVariable>
                    </postShowPageActionList>
                    <preShowPageActionList>
                        <getFreePort>
                            <variable>freePort</variable>
                            <initialPort>5432</initialPort>
                            <finalPort>65535</finalPort>
                        </getFreePort>
                    </preShowPageActionList>
                    <validationActionList>
                        <throwError>
                            <text>${msg(pg_port.error)}</text>
                            <ruleList>
                                <portTest>
                                    <condition>cannot_bind</condition>
                                    <port>${pg_port}</port>
                                </portTest>
                            </ruleList>
                        </throwError>
                    </validationActionList>
                </stringParameter>
                <passwordParameter>
                    <name>pg_password</name>
                    <title>${msg(password.title)}</title>
                    <description>${msg(password.description)}</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <descriptionRetype>${msg(password.retype)}</descriptionRetype>
                    <width>20</width>
                    <postShowPageActionList>
                        <setInstallerVariable>
                            <name>next_page</name>
                            <value>superuser_password</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>back_page</name>
                            <value>pg_port</value>
                        </setInstallerVariable>
                    </postShowPageActionList>
                    <preShowPageActionList>
                        <setInstallerVariable>
                            <name>back_page</name>
                            <value>pg_port</value>
                        </setInstallerVariable>
                    </preShowPageActionList>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </passwordParameter>
                <passwordParameter>
                    <name>superuser_password</name>
                    <title>${msg(superuser_password.title)}</title>
                    <description>${msg(superuser_password.description)}</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <descriptionRetype>${msg(superuser_password.retype)}</descriptionRetype>
                    <width>20</width>
                    <postShowPageActionList>
                        <setInstallerVariable>
                            <name>next_page</name>
                            <value>summary</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>back_page</name>
                            <value>pg_password</value>

			    <!-- Make sure we only show pg_password screen if platform is not Windows -->
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>

                        </setInstallerVariable>
                    </postShowPageActionList>
                    <preShowPageActionList>

			<setInstallerVariable>
                            <name>back_page</name>
                            <value>pg_port</value>
                            <!-- While running installer on Windows If user press back button on superuser_password screen then pg_port screen should appear -->
                            <ruleList>
                                <platformTest>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>
                        </setInstallerVariable>

                        <setInstallerVariable>
                            <name>back_page</name>
                            <value>pg_password</value>

			    <!-- Make sure we only display pg_password screen if platform is not Windows -->
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>

                        </setInstallerVariable>
                    </preShowPageActionList>
                </passwordParameter>
                <labelParameter>
                    <name>summary</name>
                    <title>${msg(summary.title)}</title>
                    <description></description>
                    <explanation>${msg(summary.intro)} ${project.fullName}.

${msg(summary.review)}:

${msg(summary.installdir)}: ${installdir}
${msg(data_dir.description)}: ${data_dir}
${msg(summary.pg_port)}: ${pg_port}

${msg(summary.confirm)}
                    </explanation>
                    <image></image>
                    <postShowPageActionList>
                        <setInstallerVariable name="next_page" value="installation"/>
                        <setInstallerVariable name="back_page" value="superuser_password"/>
                    </postShowPageActionList>
                    <preShowPageActionList>
                        <setInstallerVariable name="back_page" value="superuser_password"/>
                    </preShowPageActionList>
                </labelParameter>
                <stringParameter>
                    <name>server_ready</name>
                    <description></description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>100</width>
                </stringParameter>
                <stringParameter>
                    <name>xdg_location</name>
                    <description></description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <ask>0</ask>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <postInstallationActionList>
                <runProgram>
                    <abortOnError>0</abortOnError>
                    <explanation>Microsoft's redistributable runtime libraries (64-bit)</explanation>
                    <program>${installdir}/${product_version}/Installer_scripts/vcredist_2015_x64.exe</program>
                    <programArguments>/passive /norestart</programArguments>
                    <progressText>${msg(progress.64bit_runtime)}</progressText>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <throwError>
                            <text>${msg(error.runtime_installation)}</text>
                            <ruleList>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>5100</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>3010</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>1638</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                            </ruleList>
                        </throwError>
                    </onErrorActionList>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </runProgram>
		<runProgram>
                    <abortOnError>0</abortOnError>
                    <explanation>Microsoft's redistributable runtime libraries (64-bit)</explanation>
                    <program>${installdir}/${product_version}/Installer_scripts/vcredist_2013_x64.exe</program>
                    <programArguments>/passive /norestart</programArguments>
                    <progressText>${msg(progress.64bit_runtime)}</progressText>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <throwError>
                            <text>${msg(error.runtime_installation)}</text>
                            <ruleList>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>5100</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>3010</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>1638</text>
                                    <value>${program_exit_code}</value>
                                </compareText>
                            </ruleList>a
                        </throwError>
                    </onErrorActionList>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </runProgram>
                <addUser>
                    <abortOnError>1</abortOnError>
                    <explanation>${msg(info.createuser)}</explanation>
                    <password>${pg_password}</password>
                    <showMessageOnError>1</showMessageOnError>
                    <username>postgres</username>
                    <ruleList>
                        <platformTest negate="1" type="windows"/>
                    </ruleList>
                </addUser>
                <createDirectory>
                    <explanation>${msg(info.createdatadir)}</explanation>
                    <path>${data_dir}</path>
                </createDirectory>
		<actionGroup>
			<progressText>Setting Windows ACL permissions on data dir</progressText>
			<actionList>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /inheritance:r</programArguments>
				</runProgram>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /T /Q /grant "${system_username}:(OI)(CI)F"</programArguments>
				</runProgram>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /T /Q /grant "*S-1-5-20:(OI)(CI)F"</programArguments>
				</runProgram>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /T /Q /grant "*S-1-3-0:(OI)(CI)F"</programArguments>
				</runProgram>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /T /Q /grant "*S-1-5-18:(OI)(CI)F"</programArguments>
				</runProgram>
				<runProgram>
					<program>C:\Windows\System32\icacls.exe</program>
					<programArguments>"${data_dir}" /T /Q /grant "*S-1-5-32-544:(OI)(CI)F"</programArguments>
				</runProgram>
			</actionList>
			<ruleList>
				<compareText logic ="contains" text="${platform_name}" value="windows" />
			</ruleList>
		</actionGroup>
                <changeOwnerAndGroup>
                    <files>${data_dir}</files>
                    <group></group>
                    <owner>postgres</owner>
                </changeOwnerAndGroup>
                <setInstallerVariable>
			<name>systemTempDir</name>
			<value>${system_temp_directory}</value>
		</setInstallerVariable>
                <if>
                        <actionList>
                                <setInstallerVariable>
                                        <name>systemTempDir</name>
                                        <value>${systemTempDir.dos}</value>
                                </setInstallerVariable>
                        </actionList>
                        <conditionRuleList>
                                <compareText>
                                        <logic>equals</logic>
                                        <text>windows</text>
                                        <value>${platform_name}</value>
                                </compareText>
                        </conditionRuleList>
                </if>

                <!-- Unix - generating random file -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="iteration" value="0"/>
                        <while>
                            <actionList>
                                <generateRandomValue length="20" variable="random_number"/>
                                <runProgram>
                                    <program>sh</program>
                                    <programArguments>-c &lt;&lt;EOF '
					        umask 0077
						mkdir "${installdir}/Postgres_installer_${random_number}"
                                                if [ $? -ne 0 ];
                                                then
                                                    exit 100
                                                fi
                                                '
EOF
                                    </programArguments>
                                </runProgram>
                                <break>
                                    <ruleList>
                                        <compareText logic="equals" text="0" value="${program_exit_code}"/>
                                    </ruleList>
                                </break>
                                <actionGroup>
                                    <actionList>
                                        <throwError text="can not create temp dir" abortOnError="1">
                                            <ruleList>
                                                <compareValues value1="${iteration}" logic="equals" value2="9"/>
                                            </ruleList>
                                        </throwError>
                                    </actionList>
                                </actionGroup>
                                <mathExpression text="${iteration}+1" variable="iteration"/>
                           </actionList>
                           <conditionRuleList>
                                <compareValues value1="${iteration}" logic="less" value2="10"/>
                           </conditionRuleList>
                        </while>
                        <setInstallerVariable name="random_number" value="${random_number}"/>
                    </actionList>
                    <ruleList>
                        <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
                    </ruleList>
                </actionGroup>

                <!-- Windows generating ranodm file -->
                <actionGroup>
                    <actionList>
                        <globalVariables names="random_number"/>
                        <generateRandomValue length="20" variable="random_number"/>
                        <createDirectory path="${installdir}${slash}Postgres_installer_${random_number}"/>
                        <runProgram>
                            <program>C:\Windows\System32\icacls.exe</program>
                            <programArguments>"${installdir}${slash}Postgres_installer_${random_number}" /inheritance:r</programArguments>
                            <showMessageOnError>1</showMessageOnError>
                            <progressText></progressText>
                        </runProgram>
                        <runProgram>
                            <program>C:\Windows\System32\icacls.exe</program>
                            <programArguments>"${installdir}${slash}Postgres_installer_${random_number}" /T /Q /grant "${env(USERDOMAIN)}\${system_username}:(OI)(CI)F"</programArguments>
                            <showMessageOnError>1</showMessageOnError>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText logic="equals" text="${platform_name}" value="windows"/>
                    </ruleList>
                </actionGroup>

                <!-- Unix - setting permissions on random dir and file -->
                <actionGroup>
		    <actionList>
		        <runProgram>
                            <program>touch</program>
                            <programArguments>${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</programArguments>
                        </runProgram>

                        <runProgram>
                            <program>chmod</program>
                            <programArguments>0600 ${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</programArguments>
                        </runProgram>

                        <runProgram>
                            <program>chown</program>
                            <programArguments>postgres:daemon ${installdir}${slash}Postgres_installer_${random_number}</programArguments>
                        </runProgram>

                        <runProgram>
                            <program>chown</program>
                            <programArguments>postgres:daemon ${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</programArguments>
                        </runProgram>
		    </actionList>
		    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
	            </ruleList>
	        </actionGroup>

                <addTextToFile>
                    <file>${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</file>
                    <text>${superuser_password}</text>
                </addTextToFile>

                <changeOSXAttributes>
                    <creator></creator>
                    <files>${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</files>
                    <hidden>1</hidden>
                    <type>TEXT</type>
                </changeOSXAttributes>
                <changeWindowsAttributes>
                    <files>${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd</files>
                    <hidden>1</hidden>
                    <readOnly>1</readOnly>
                </changeWindowsAttributes>
                <runProgram>
                    <explanation>Initializing PostgreSQL Server</explanation>
                    <program>${installdir}/${product_version}/bin/initdb</program>
                    <programArguments>-D "${data_dir}" -U postgres --pwfile "${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd" --encoding=utf8 -A md5</programArguments>
                    <progressText>${msg(progress.initdb)}</progressText>
                    <runAs>postgres</runAs>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <explanation>Initializing PostgreSQL Server</explanation>
                    <program>${installdir}/${product_version}/bin/initdb</program>
                    <programArguments>-D "${data_dir}" -U postgres --pwfile "${installdir}${slash}Postgres_installer_${random_number}${slash}.initdbpwd" --encoding=UTF-8 -A md5</programArguments>
                    <progressText>${msg(progress.initdb)}</progressText>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </runProgram>

                <deleteFile>
                    <matchHiddenFiles>1</matchHiddenFiles>
                    <path>${installdir}${slash}Postgres_installer_${random_number}</path>
                </deleteFile>

                <runProgram>
                    <abortOnError>0</abortOnError>
                    <program>${installdir}\${product_version}\bin\pg_ctl</program>
                    <programArguments>unregister -N "PostgreSQL-2ndQ ${product_version}"</programArguments>
                    <showMessageOnError>0</showMessageOnError>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <program>${installdir}\${product_version}\bin\pg_ctl</program>
                    <programArguments>register -N "PostgreSQL-2ndQ ${product_version}" -U "NT AUTHORITY\NetworkService" -D "${data_dir}" -o "-p ${pg_port}" -l "${data_dir}\logfile"</programArguments>
                    <progressText>${msg(progress.register_service)}</progressText>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </runProgram>
                <startWindowsService>
                    <delay>15000</delay>
                    <displayName></displayName>
                    <progressText>${msg(progress.start_service)}</progressText>
                    <serviceName>PostgreSQL-2ndQ ${product_version}</serviceName>
                </startWindowsService>

		<substitute>
                    <files>${installdir}${slash}${product_version}${slash}Installer_scripts${slash}PGSvc.sh</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>_PGPORT_</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>_PLPACKAGE_</pattern>
                            <value>${installdir}/pl-languages</value>
                        </substitution>
                        <substitution>
                            <pattern>_PGHOME_</pattern>
                            <value>${installdir}${slash}${product_version}</value>
                        </substitution>
                    </substitutionList>
                </substitute>

		<copyFile>
			<origin>${installdir}${slash}${product_version}${slash}Installer_scripts${slash}PGSvc.sh</origin>
			<destination>${installdir}${slash}${product_version}${slash}bin${slash}PGSvc.sh</destination>
                        <ruleList>
                            <platformTest negate="1"  type="windows"/>
                        </ruleList>
                </copyFile>

                <createOSXService>
                    <abandonProcessGroup>0</abandonProcessGroup>
                    <groupname></groupname>
                    <keepAlive>0</keepAlive>
                    <program>${installdir}${slash}${product_version}${slash}bin${slash}PGSvc.sh</program>
                    <programArguments>start</programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <scope>system</scope>
                    <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                    <username>postgres</username>
                </createOSXService>

                <copyFile>
                    <destination>${installdir}/${product_version}/postgresql.bin</destination>
                    <origin>${installdir}/${product_version}/Installer_scripts/postgresql.bin.in</origin>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </copyFile>
		<substitute>
                    <files>${installdir}/${product_version}/postgresql.bin</files>
                    <type>exact</type>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                    <substitutionList>
                        <substitution>
                            <pattern>_PGHOME_</pattern>
                            <value>${installdir}/${product_version}</value>
                        </substitution>
                        <substitution>
                            <pattern>_PGPORT_</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>_PLPACKAGE_</pattern>
                            <value>${installdir}/pl-languages</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <changePermissions>
                    <files>${installdir}/${product_version}/postgresql.bin</files>
                    <permissions>755</permissions>
                </changePermissions>
                <addUnixService>
                    <description>Product description</description>
                    <name>postgresql-2ndQ-${product_version}</name>
                    <program>${installdir}/${product_version}/postgresql.bin</program>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </addUnixService>
                <runProgram>
                    <program>service</program>
                    <programArguments>postgresql-2ndQ-${product_version} start</programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <substitute>
                    <files>${installdir}/${product_version}/Installer_scripts/postgresql-${product_version}.service</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>pg_path</pattern>
                            <value>${installdir}/${product_version}</value>
                        </substitution>
                        <substitution>
                            <pattern>data_dir</pattern>
                            <value>${data_dir}</value>
                        </substitution>
                        <substitution>
                            <pattern>pg_port</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <copyFile>
                    <destination>/etc/systemd/system/postgresql-2ndQ-${product_version}.service</destination>
                    <origin>${installdir}/${product_version}/Installer_scripts/postgresql-${product_version}.service</origin>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </copyFile>
                <runProgram>
                    <program>systemctl</program>
                    <programArguments>enable postgresql-2ndQ-${product_version}.service</programArguments>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <program>service</program>
                    <programArguments>postgresql-2ndQ-${product_version} start</programArguments>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <explanation>Starting PostgreSQL Server</explanation>
                    <program>${installdir}/${product_version}/bin/pg_ctl</program>
                    <programArguments>-w -D "${data_dir}" -o "-p ${pg_port}" -l "${data_dir}/logfile" start </programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <runAs>postgres</runAs>
                    <workingDirectory>${installdir}/${product_version}/bin</workingDirectory>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                        <platformTest>
                            <negate>1</negate>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </runProgram>
                <while>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <abortOnError>0</abortOnError>
                            <exec>${installdir}/${product_version}/bin/pg_isready</exec>
                            <execArgs>-p ${pg_port}</execArgs>
                            <name>server_ready</name>
                            <showMessageOnError>0</showMessageOnError>
                            <onErrorActionList>
                                <continue/>
                            </onErrorActionList>
                        </setInstallerVariableFromScriptOutput>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <negate>1</negate>
                            <nocase>1</nocase>
                            <text>${server_ready}</text>
                            <value>accepting</value>
                        </compareText>
                    </conditionRuleList>
                </while>
                <substitute>
                    <files>${installdir}/${product_version}/Installer_scripts/org.2ndQ.postgresql.info</files>
                    <type>regexp</type>
                    <substitutionList>
                        <substitution>
                            <pattern>install_dir</pattern>
                            <value>${installdir}/${product_version}</value>
                        </substitution>
                        <substitution>
                            <pattern>pg_port</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>data_dir</pattern>
                            <value>${data_dir}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <actionGroup>
                    <actionList>
                        <createDirectory>
                            <path>/Library/Application Support/2ndQ</path>
                        </createDirectory>
                        <copyFile>
                            <destination>/Library/Application Support/2ndQ/org.2ndQ.postgresql.${product_version}.info</destination>
                            <origin>${installdir}/${product_version}/Installer_scripts/org.2ndQ.postgresql.info</origin>
                        </copyFile>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${project.fullName}.${product_version}</key>
                            <name>Data</name>
                            <type>REG_SZ</type>
                            <value>${data_dir}</value>
                        </registrySet>
                        <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${project.fullName}.${product_version}</key>
                            <name>Port</name>
                            <type>REG_SZ</type>
                            <value>${pg_port}</value>
                        </registrySet>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <setInstallerVariableFromRegEx>
                            <name>xdg_location</name>
                            <pattern>(\/[^:]+).+$</pattern>
                            <substitution></substitution>
                            <text>${env(XDG_DATA_DIRS)}</text>
                        </setInstallerVariableFromRegEx>
                        <setInstallerVariable>
                            <name>xdg_location</name>
                            <value>${xdg_location}/2ndQ</value>
                            <ruleList>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>${xdg_location}</text>
                                    <value></value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>xdg_location</name>
                            <value>/usr/local/share/2ndQ</value>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${xdg_location}</text>
                                    <value></value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                        <createDirectory>
                            <path>${xdg_location}</path>
                        </createDirectory>
                        <copyFile>
                            <destination>${xdg_location}/org.2ndQ.postgresql.${product_version}.info</destination>
                            <origin>${installdir}/${product_version}/Installer_scripts/org.2ndQ.postgresql.info</origin>
                        </copyFile>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>org.2ndQ.postgresql-${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>PostgreSQL-2ndQ ${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>postgresql-2ndQ-${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
            </postInstallationActionList>
            <preUninstallationActionList>
                <actionGroup>
                    <progressText>Remove OSX Service</progressText>
                    <actionList>
                        <stopOSXService>
                            <progressText>${msg(progress.stop_server)}</progressText>
                            <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                        </stopOSXService>
                        <deleteOSXService>
                            <scope>system</scope>
                            <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                        </deleteOSXService>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Remove Windows Service</progressText>
                    <actionList>
                        <stopWindowsService>
                            <delay>15000</delay>
                            <displayName></displayName>
                            <progressText>${msg(progress.stop_server)}</progressText>
                            <serviceName>PostgreSQL-2ndQ ${product_version}</serviceName>
                        </stopWindowsService>
                        <runProgram>
                            <explanation>Unregistering Windows PostgreSQL ${product_version} service</explanation>
                            <program>${installdir}\${product_version}\bin\pg_ctl</program>
                            <programArguments>unregister -N "PostgreSQL-2ndQ ${product_version}"</programArguments>
                            <progressText>${msg(progress.unregister_service)}</progressText>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Remove Debian Service</progressText>
                    <actionList>
                        <runProgram>
                            <program>service</program>
                            <programArguments>postgresql-2ndQ-${product_version} stop</programArguments>
                            <progressText>${msg(progress.stop_server)}</progressText>
                        </runProgram>
                        <removeUnixService>
                            <name>postgresql-2ndQ-${product_version}</name>
                        </removeUnixService>
                    </actionList>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Remove Service For non-Debian distros</progressText>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <actionList>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>stop postgresql-2ndQ-${product_version}</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>disable postgresql-2ndQ-${product_version}</programArguments>
                        </runProgram>
                        <deleteFile>
                            <path>/etc/systemd/system/postgresql-2ndQ-${product_version}.service</path>
                        </deleteFile>
                        <deleteFile>
                            <path>/etc/systemd/system/multi-user.target.wants/postgresql-2ndQ-${product_version}.service</path>
                        </deleteFile>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>daemon-reload</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>reset-failed</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <runProgram>
                    <explanation>Stopping the database server</explanation>
                    <program>${installdir}/${product_version}/bin/pg_ctl</program>
                    <programArguments>-D "${data_dir}"  -l "${data_dir}/logfile" stop</programArguments>
                    <progressText>${msg(progress.stop_server)}</progressText>
                    <runAs>postgres</runAs>
                    <workingDirectory>${installdir}/${product_version}/bin/</workingDirectory>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			 <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </runProgram>
            </preUninstallationActionList>
        </component>
        <component>
            <name>pg_96_upgrade</name>
            <description>PostgreSQL ${product_version} Upgrade</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>${msg(description.postgres)}</detailedDescription>
            <selected>0</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/OSX/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswin</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Windows/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programileslinux</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Linux/${product_version}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
            <parameterList>

                <!-- Adding PLC screen in upgrade mode -->
                <parameterGroup>
                        <name>postInstallationPageUpgrade</name>
                        <title>${msg(PLC.title)}</title>
                        <explanation>${msg(PLC.description)}</explanation>
                        <insertAfter>installation</insertAfter>
                        <parameterList>
                                <linkParameter>
                                        <name>openPLCInUpgrade</name>
                                        <description>Open Postgres Learning Center</description>
                                        <clickedActionList>
                                                <launchBrowser>
                                                        <url>https://www.2ndquadrant.com/en/postgres-learning-center/?utm_campaign=Postgres%20Learning%20Center&amp;utm_source=installer&amp;utm_medium=plcscreen</url>
                                                </launchBrowser>
                                        </clickedActionList>
                                </linkParameter>
                                <!-- Add more info here if we need -->
                        </parameterList>
                </parameterGroup>

                <labelParameter>
                    <name>installation_detected</name>
                    <title>${msg(existing.title)}</title>
                    <description></description>
                    <explanation>${msg(existing.explanation)} 
${msg(existing.location)}: ${installdir}
${msg(data_dir.title)}: ${data_dir}
${msg(pg_port.title)}: ${pg_port} 
${msg(existing.upgraded)} </explanation>
                    <ask>0</ask>
                    <image></image>
                    <postShowPageActionList>
                        <setInstallerVariable name="project.installationType" value="upgrade"/>
                        <setInstallerVariable>
                            <name>next_page</name>
                            <value>components</value>
                        </setInstallerVariable>
                    </postShowPageActionList>
                </labelParameter>
                <stringParameter>
                    <name>install_type</name>
                    <description></description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <ask>0</ask>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>service_availability</name>
                    <description></description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <ask>0</ask>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <postInstallationActionList>
                <addUser>
                    <abortOnError>1</abortOnError>
                    <explanation>${msg(info.createuser)}</explanation>
                    <password>Password123</password>
                    <showMessageOnError>1</showMessageOnError>
                    <username>postgres</username>
                    <ruleList>
                        <platformTest negate="1" type="windows"/>
                    </ruleList>
                </addUser>
                <createDirectory>
                    <explanation>${msg(info.createdatadir)}</explanation>
                    <path>${data_dir}</path>
                </createDirectory>
                <changeOwnerAndGroup>
                    <files>${data_dir}</files>
                    <group></group>
                    <owner>postgres</owner>
                </changeOwnerAndGroup>
                <startWindowsService>
                    <delay>15000</delay>
                    <displayName></displayName>
                    <progressText>${msg(progress.start_service)}</progressText>
                    <serviceName>PostgreSQL-2ndQ ${product_version}</serviceName>
                </startWindowsService>
                <createOSXService>
                    <abandonProcessGroup>0</abandonProcessGroup>
                    <groupname></groupname>
                    <keepAlive>0</keepAlive>
                    <program>${installdir}${slash}${product_version}${slash}bin${slash}PGSvc.sh</program>
                    <programArguments>start</programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <scope>system</scope>
                    <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                    <username>postgres</username>
                </createOSXService>
                <copyFile>
                    <destination>${installdir}/${product_version}/postgresql.bin</destination>
                    <origin>${installdir}/${product_version}/Installer_scripts/postgresql.bin.in</origin>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			 <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </copyFile>
                <substitute>
                    <files>${installdir}/${product_version}/postgresql.bin</files>
                    <type>exact</type>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                    <substitutionList>
                        <substitution>
                            <pattern>_PGHOME_</pattern>
                            <value>${installdir}/${product_version}</value>
                        </substitution>
                        <substitution>
                            <pattern>_PGPORT_</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>_PLPACKAGE_</pattern>
                            <value>${installdir}/pl-languages</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <changePermissions>
                    <files>${installdir}/${product_version}/postgresql.bin</files>
                    <permissions>755</permissions>
                </changePermissions>
                <addUnixService>
                    <description>Product description</description>
                    <name>postgresql-2ndQ-${product_version}</name>
                    <program>${installdir}/${product_version}/postgresql.bin</program>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </addUnixService>
                <runProgram>
                    <program>service</program>
                    <programArguments>postgresql-2ndQ-${product_version} start</programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <substitute>
                    <files>${installdir}/${product_version}/Installer_scripts/postgresql-${product_version}.service</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>pg_path</pattern>
                            <value>${installdir}/${product_version}</value>
                        </substitution>
                        <substitution>
                            <pattern>data_dir</pattern>
                            <value>${data_dir}</value>
                        </substitution>
                        <substitution>
                            <pattern>pg_port</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <copyFile>
                    <destination>/etc/systemd/system/postgresql-2ndQ-${product_version}.service</destination>
                    <origin>${installdir}/${product_version}/Installer_scripts/postgresql-${product_version}.service</origin>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </copyFile>
                <runProgram>
                    <program>systemctl</program>
                    <programArguments>enable postgresql-2ndQ-${product_version}.service</programArguments>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <program>service</program>
                    <programArguments>postgresql-2ndQ-${product_version} start</programArguments>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <explanation>Starting PostgreSQL Server</explanation>
                    <program>${installdir}/${product_version}/bin/pg_ctl</program>
                    <programArguments>-w -D "${data_dir}" -o "-p ${pg_port}" -l "${data_dir}/logfile" start </programArguments>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <runAs>postgres</runAs>
                    <workingDirectory>${installdir}/${product_version}/bin</workingDirectory>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                        <platformTest>
                            <negate>1</negate>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </runProgram>
                <while>
                    <progressText>${msg(progress.start_server)}</progressText>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <abortOnError>0</abortOnError>
                            <exec>${installdir}/${product_version}/bin/pg_isready</exec>
                            <execArgs>-p ${pg_port}</execArgs>
                            <name>server_ready</name>
                            <showMessageOnError>0</showMessageOnError>
                            <onErrorActionList>
                                <continue/>
                            </onErrorActionList>
                        </setInstallerVariableFromScriptOutput>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <negate>1</negate>
                            <nocase>1</nocase>
                            <text>${server_ready}</text>
                            <value>accepting</value>
                        </compareText>
                    </conditionRuleList>
                </while>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>org.2ndQ.postgresql-${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>PostgreSQL-2ndQ ${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>servicename</name>
                    <value>postgresql-2ndQ-${product_version}</value>
                    <ruleList>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
            </postInstallationActionList>
            <readyToInstallActionList>

                <!-- Renaming README - this is because if user run latest version of installer on any older version then we need to upgrade README manually -->
                <renameFile>
                    <origin>${installdir}/${product_version}/README-${platform_name}.txt</origin>
                    <destination>${installdir}/${product_version}/README-${platform_name}-old.txt</destination>
                </renameFile>

                <actionGroup>
                    <progressText>Remove OSX Service</progressText>
                    <actionList>
                        <stopOSXService>
                            <progressText>${msg(progress.stop_server)}</progressText>
                            <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                        </stopOSXService>
                        <deleteOSXService>
                            <scope>system</scope>
                            <serviceName>org.2ndQ.postgresql-${product_version}</serviceName>
                        </deleteOSXService>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Stopping the database server</progressText>
                    <actionList>
                        <stopWindowsService>
                            <delay>15000</delay>
                            <displayName></displayName>
                            <serviceName>PostgreSQL-2ndQ ${product_version}</serviceName>
                        </stopWindowsService>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
		<actionGroup>
				<progressText>Setting Windows ACL permissions on data dir</progressText>
                                <actionList>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /inheritance:r</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}"  /remove:g Users</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}"  /remove:g Everyone</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /T /Q /grant "${system_username}:(OI)(CI)F"</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /T /Q /grant "*S-1-5-20:(OI)(CI)F"</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /T /Q /grant "*S-1-3-0:(OI)(CI)F"</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /T /Q /grant "*S-1-5-18:(OI)(CI)F"</programArguments>
                                        </runProgram>
                                        <runProgram>
                                                <program>C:\Windows\System32\icacls.exe</program>
                                                <programArguments>"${data_dir}" /T /Q /grant "*S-1-5-32-544:(OI)(CI)F"</programArguments>
                                        </runProgram>
                                </actionList>
                                <ruleList>
                                        <compareText logic ="contains" text="${platform_name}" value="windows" />
                                </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Remove Debian Service</progressText>
                    <actionList>
                        <runProgram>
                            <program>service</program>
                            <programArguments>postgresql-2ndQ-${product_version} stop</programArguments>
                            <progressText>${msg(progress.stop_server)}</progressText>
                        </runProgram>
                        <removeUnixService>
                            <name>postgresql-2ndQ-${product_version}</name>
                        </removeUnixService>
                    </actionList>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Remove Service For non-Debian distros</progressText>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <actionList>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>stop postgresql-2ndQ-${product_version}</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>disable postgresql-2ndQ-${product_version}</programArguments>
                        </runProgram>
                        <deleteFile>
                            <path>/etc/systemd/system/postgresql-2ndQ-${product_version}.service</path>
                        </deleteFile>
                        <deleteFile>
                            <path>/etc/systemd/system/multi-user.target.wants/postgresql-2ndQ-${product_version}.service</path>
                        </deleteFile>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>daemon-reload</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>systemctl</program>
                            <programArguments>reset-failed</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <runProgram>
                    <explanation>Stopping the database server</explanation>
                    <program>${installdir}/${product_version}/bin/pg_ctl</program>
                    <programArguments>-D "${data_dir}"  -l "${data_dir}/logfile" stop</programArguments>
                    <progressText>${msg(progress.stop_server)}</progressText>
                    <runAs>postgres</runAs>
                    <workingDirectory>${installdir}/${product_version}/bin/</workingDirectory>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			 <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <negate>1</negate>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </runProgram>
            </readyToInstallActionList>
        </component>
        <component>
            <name>readme</name>
            <description>README</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Docs</description>
                    <destination>${installdir}/${product_version}</destination>
                    <name>docs</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/README-${platform_name}.txt</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <postInstallationActionList>
		<setInstallerVariable>
			<name>formattedPGHome</name>
			<value>${installdir}/${product_version}</value>
		</setInstallerVariable>
		<setInstallerVariable>
                        <name>formattedOmniHome</name>
                        <value>${installdir}/OmniDB</value>
                </setInstallerVariable>
		<if>
                        <actionList>
                                <setInstallerVariable>
                                        <name>formattedPGHome</name>
                                        <value>${installdir}\${product_version}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                        <name>formattedOmniHome</name>
                                        <value>${installdir}\OmniDB</value>
                                </setInstallerVariable>
                        </actionList>
                        <conditionRuleList>
                                <compareText>
                                        <logic>equals</logic>
                                        <text>windows</text>
                                        <value>${platform_name}</value>
                                </compareText>
                        </conditionRuleList>
                </if>
		<substitute>
                    <files>${installdir}/${product_version}/README-${platform_name}.txt</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>__PGHOME__</pattern>
                            <value>${formattedPGHome}</value>
                        </substitution>
                        <substitution>
                            <pattern>__DATADIR__</pattern>
                            <value>${data_dir}</value>
                        </substitution>
                        <substitution>
                            <pattern>__PGPORT__</pattern>
                            <value>${pg_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>__SRVC_NAME__</pattern>
                            <value>${servicename}</value>
                        </substitution>
			<substitution>
                            <pattern>__OMNIHOME__</pattern>
                            <value>${formattedOmniHome}</value>
                        </substitution>
                        <substitution>
                            <pattern>__INSTALLDIR__</pattern>
                            <value>${installdir}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <substitute>
                    <files>${installdir}${slash}${product_version}${slash}bin${slash}serverctl.vbs</files>
                    <type>exact</type>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                    <substitutionList>
                        <substitution>
                            <pattern>__PGHOME__</pattern>
                            <value>${formattedPGHome}</value>
                        </substitution>
                        <substitution>
                            <pattern>__INSTALLDIR__</pattern>
                            <value>${installdir}</value>
                        </substitution>
                        <substitution>
                            <pattern>__DATADIR__</pattern>
                            <value>${data_dir}</value>
                        </substitution>
                        <substitution>
                            <pattern>__SRVC_NAME__</pattern>
                            <value>${servicename}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
            </postInstallationActionList>
        </component>
        <component>
            <name>omnidb</name>
            <description>OmniDB</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>${msg(description.omniDB)}</detailedDescription>
            <selected>0</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>OmniDB</description>
                    <destination>${installdir}/</destination>
                    <name>omnidb_osx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/OSX/OmniDB</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>OmniDB</description>
                    <destination>${installdir}/</destination>
                    <name>omnidb_windows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Windows/OmniDB</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>OmniDB</description>
                    <destination>${installdir}/</destination>
                    <name>omnidb_linux_x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Linux/OmniDB</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
        </component>
        <component>
            <name>pl_languages</name>
            <description>pl-languages</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>${msg(description.pl-languages)}</detailedDescription>
            <selected>0</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>pl-languages</description>
                    <destination>${installdir}/</destination>
                    <name>pl_languages_osx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/OSX/pl-languages</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>pl-languages</description>
                    <destination>${installdir}/</destination>
                    <name>pl_languages_windows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Windows/pl-languages</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>pl-languages</description>
                    <destination>${installdir}/</destination>
                    <name>pl_languages_linux_x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>${build_project_directory}/Builds/Linux/pl-languages</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
        </component>
    </componentList>
    <preInstallationActionList>
        <setInstallerVariable>
            <name>install_type</name>
            <value>install</value>
        </setInstallerVariable>
        <actionGroup>
            <progressText>Install type is 'upgrade'</progressText>
            <actionList>
                <setInstallerVariable>
                    <name>install_type</name>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <value>upgrade</value>
                    <ruleList>
                        <osxServiceTest>
                            <condition>exists</condition>
                            <service>org.2ndQ.postgresql-${product_version}</service>
                        </osxServiceTest>
                        <windowsServiceTest>
                            <condition>exists</condition>
                            <service>PostgreSQL-2ndQ ${product_version}</service>
                        </windowsServiceTest>
                    </ruleList>
                </setInstallerVariable>
                <actionGroup>
                    <progressText>Check Debian</progressText>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <abortOnError>0</abortOnError>
                            <exec>service</exec>
                            <execArgs>postgresql-2ndQ-${product_version} status</execArgs>
                            <name>service_availability</name>
                            <showMessageOnError>0</showMessageOnError>
                            <onErrorActionList>
                                <setInstallerVariable>
                                    <name>install_type</name>
                                    <value>install</value>
                                </setInstallerVariable>
                            </onErrorActionList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariable>
                            <name>install_type</name>
                            <value>upgrade</value>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <negate>1</negate>
                                    <nocase>1</nocase>
                                    <text>${service_availability}</text>
                                    <value>unrecognized</value>
                                </compareText>
                                <compareText>
                                    <logic>equals</logic>
                                    <negate>1</negate>
                                    <text>${service_availability}</text>
                                    <value></value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                    </actionList>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>debian</value>
                        </compareText>
			<compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>ubuntu</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>Check non-Debian</progressText>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <abortOnError>0</abortOnError>
                            <exec>systemctl</exec>
                            <execArgs>status postgresql-2ndQ-${product_version}.service</execArgs>
                            <name>service_availability</name>
                            <showMessageOnError>0</showMessageOnError>
                            <onErrorActionList>
                                <setInstallerVariable>
                                    <name>install_type</name>
                                    <value>install</value>
                                </setInstallerVariable>
                            </onErrorActionList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariable>
                            <name>install_type</name>
                            <value>upgrade</value>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <negate>1</negate>
                                    <nocase>1</nocase>
                                    <text>${service_availability}</text>
                                    <value>not-found</value>
                                </compareText>
                                <compareText>
                                    <logic>equals</logic>
                                    <negate>1</negate>
                                    <text>${service_availability}</text>
                                    <value></value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>install_type</name>
                            <value>install</value>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <nocase>1</nocase>
                                    <text>${service_availability}</text>
                                    <value>not-found</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>redhat</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>suse</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${linux_distribution}</text>
                            <value>fedora</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </actionList>
        </actionGroup>
        <actionGroup>
            <progressText>Component Selection - Upgrade</progressText>
            <actionList>
                <componentSelection>
                    <deselect>pg_96</deselect>
                    <select>pg_96_upgrade,omnidb,pl_languages</select>
                </componentSelection>
                <setInstallerVariable>
                    <name>project.component(pg_96_upgrade).canBeEdited</name>
                    <value>1</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>project.component(omnidb).canBeEdited</name>
                    <value>1</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>project.component(pl_languages).canBeEdited</name>
                    <value>1</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>project.component(pg_96).show</name>
                    <value>0</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>next_page</name>
                    <value>installation_detected</value>
                </setInstallerVariable>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>upgrade</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <progressText>Component Selection - Install</progressText>
            <actionList>
                <componentSelection>
                    <deselect>pg_96_upgrade</deselect>
                    <select>pg_96</select>
                </componentSelection>
                <setInstallerVariable>
                    <name>project.component(pg_96_upgrade).show</name>
                    <value>0</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>project.component(pg_96).show</name>
                    <value>1</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>next_page</name>
                    <value>installdir</value>
                </setInstallerVariable>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>install</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <progressText>OSX - Get existing installation info</progressText>
            <actionList>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/installdir</element>
                    <file>/Library/Application Support/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>installdir</variable>
                </xmlFileGet>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/pgport</element>
                    <file>/Library/Application Support/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>pg_port</variable>
                </xmlFileGet>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/datadir</element>
                    <file>/Library/Application Support/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>data_dir</variable>
                </xmlFileGet>
                <setInstallerVariableFromRegEx>
                    <name>installdir</name>
                    <pattern>${product_version}</pattern>
                    <substitution></substitution>
                    <text>${installdir}</text>
                </setInstallerVariableFromRegEx>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>upgrade</value>
                </compareText>
                <fileExists>
                    <path>/Library/Application Support/2ndQ/org.2ndQ.postgresql.${product_version}.info</path>
                </fileExists>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <progressText>Windows - Get existing installation info</progressText>
            <actionList>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${project.fullName}.${product_version}</key>
                    <name>Location</name>
                    <variable>installdir</variable>
                </registryGet>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${project.fullName}.${product_version}</key>
                    <name>Port</name>
                    <variable>pg_port</variable>
                </registryGet>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${project.fullName}.${product_version}</key>
                    <name>Data</name>
                    <variable>data_dir</variable>
                </registryGet>
                <setInstallerVariableFromRegEx>
                    <name>installdir</name>
                    <pattern>${product_version}</pattern>
                    <substitution></substitution>
                    <text>${installdir}</text>
                </setInstallerVariableFromRegEx>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>upgrade</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <progressText>Linux - Get existing installation info</progressText>
            <actionList>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/installdir</element>
                    <file>/usr/local/share/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>installdir</variable>
                </xmlFileGet>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/pgport</element>
                    <file>/usr/local/share/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>pg_port</variable>
                </xmlFileGet>
                <xmlFileGet>
                    <attribute></attribute>
                    <element>/installdetails/datadir</element>
                    <file>/usr/local/share/2ndQ/org.2ndQ.postgresql.${product_version}.info</file>
                    <variable>data_dir</variable>
                </xmlFileGet>
                <setInstallerVariableFromRegEx>
                    <name>installdir</name>
                    <pattern>${product_version}</pattern>
                    <substitution></substitution>
                    <text>${installdir}</text>
                </setInstallerVariableFromRegEx>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>upgrade</value>
                </compareText>
                <fileExists>
                    <path>/usr/local/share/2ndQ/org.2ndQ.postgresql.${product_version}.info</path>
                </fileExists>
            </ruleList>
        </actionGroup>
    </preInstallationActionList>
    <postInstallationActionList>

        <!-- Removing old README -->
        <deleteFile>
            <path>${installdir}/${product_version}/README-${platform_name}-old.txt</path>
        </deleteFile>

        <deleteFile>
            <path>${installdir}/${product_version}/Installer_scripts</path>
            <progressText>Removing temp files</progressText>
        </deleteFile>
        <setInstallerVariable>
            <name>project.allowAddRemoveComponents</name>
            <value>1</value>
        </setInstallerVariable>
    </postInstallationActionList>

    <preUninstallationActionList>
        <addFilesToUninstaller>
            <files>${installdir}${slash}${product_version}${slash}bin${slash}PGSvc.sh</files>
        </addFilesToUninstaller>
    </preUninstallationActionList>


    <allowComponentSelection>1</allowComponentSelection>
    <allowedLanguages>en fr de it es</allowedLanguages>
    <createOsxBundleZip>1</createOsxBundleZip>
    <enableDebugger>1</enableDebugger>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <installationLogFile>${installdir}/${product_version}/install.log</installationLogFile>
    <osxDmgBackgroundImage>${build_project_directory}/logos/2ndQLeftPanel.png</osxDmgBackgroundImage>
    <osxSigningPkcs12File>${build_project_directory}/codesign/signing/osx-signing.p12</osxSigningPkcs12File>
    <osxSigningPkcs12Password>${env(OSX_SIGNING_PASSWORD)}</osxSigningPkcs12Password>
    <osxUninstallerApplicationBundleIcon>${build_project_directory}/logos/2ndQLeftPanel.png</osxUninstallerApplicationBundleIcon>
    <windowsSigningPkcs12File>${build_project_directory}/codesign/signing/windows-signing.pfx</windowsSigningPkcs12File>
    <windowsSigningPkcs12Password>${env(WINDOWS_SIGNING_PASSWORD)}</windowsSigningPkcs12Password>
    <windowsSigningTimestampServer>http://timestamp.verisign.com/scripts/timstamp.dll</windowsSigningTimestampServer>
    <windowsSigningTimestampFormat>authenticode</windowsSigningTimestampFormat>
    <overwritePolicy>onlyIfNewer</overwritePolicy>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <saveRelativePaths>1</saveRelativePaths>
    <singleInstanceCheck>1</singleInstanceCheck>
    <splashScreenDelay>1500</splashScreenDelay>
    <uninstallerName>Uninstall${product_version}</uninstallerName>
    <vendor>2ndQuadrant</vendor>
    <windows64bitMode>1</windows64bitMode>
    <customLanguageFileList>
        <language>
            <code>fr</code>
            <encoding>utf-8</encoding>
            <file>Language/custom-fr.lng</file>
        </language>
        <language>
            <code>en</code>
            <file>Language/custom-en.lng</file>
        </language>
        <language>
            <code>de</code>
            <encoding>utf-8</encoding>
            <file>Language/custom-de.lng</file>
        </language>
        <language>
            <code>es</code>
            <encoding>utf-8</encoding>
            <file>Language/custom-es.lng</file>
        </language>
        <language>
            <code>it</code>
            <encoding>utf-8</encoding>
            <file>Language/custom-it.lng</file>
        </language>
    </customLanguageFileList>
    <finalPageActionList>
        <!-- ... 
 read the README file, setting show to 0 prevents it from being shown as an option -->
        <readFile>
            <name>readme_contents</name>
            <path>${installdir}/${product_version}/README-${platform_name}.txt</path>
            <show>0</show>
        </readFile>

        <!-- add option to show the README file -->
        <showText>
            <progressText>Show readme file</progressText>
            <text>${readme_contents}</text>
            <title>Readme</title>
        </showText>
    </finalPageActionList>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${project.vendor}/${product_shortname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <osxBundlesAreFiles>1</osxBundlesAreFiles>
            <width>30</width>
            <preShowPageActionList>
                <setInstallerVariable>
                    <name>installdir</name>
                    <value>${env(PROGRAMFILES)}/${project.vendor}/${product_shortname}</value>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
            </preShowPageActionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${install_type}</text>
                    <value>install</value>
                </compareText>
            </ruleList>
        </directoryParameter>
    </parameterList>
</project>

